I initially tried using the Discussion 1C TA's approach by using a struct,
and passing an object pointer to each function. However, my test cases
always outputted 0. I realized that I had a lot of pointer dereferencing
issues, so I changed my approach. Now, I still have a struct but I extracted
the member variables and passed them as parameters into the functions that
I split into different .h and .c files. This mostly solved the problem,
except that my '-o stdio' cases always failed. I added a printf statement
to debug, and I learned that my output member variable wasn't set to the
correct value. I changed the order of an if-else statement by making the
stdio case inside the 'else' section (it was originally in the 'if' section),
and that solved the problem. Now, all my test cases run successfully.




time dd if=/dev/urandom ibs=8192 obs=8192 count=16384 >/dev/null

Output:

16384+0 records in
16384+0 records out
134217728 bytes (134 MB, 128 MiB) copied, 0.897218 s, 150 MB/s

real	0m0.901s
user	0m0.012s
sys	0m0.885s


time ./randall 133562368 >/dev/null

Output:
real	0m3.916s
user	0m3.890s
sys	0m0.012s


time ./randall 133562368 | cat >/dev/null

Output:
real	0m4.047s
user	0m3.927s
sys	0m0.267s


time ./randall 133562368 >rand.data

Output:
real	0m5.377s
user	0m3.910s
sys	0m0.109s
